import ctypes
import psutil
import time
import os
import numpy as np
from OpenGL import GL

START_TIME = time.perf_counter()

DEFAULT_LOG_FILENAME = "novaDefaultLog.log"
DEFAULT_ICON_FILEPATH = "branding/spykeIcon.ico"

MAX_LOADING_TASKS_COUNT = 6

DEBUG_LOG_TO_FILE = True

_MAIN_PROCESS = psutil.Process(os.getpid())

_OPENGL_VER_MAJOR = 4
_OPENGL_VER_MINOR = 5

_GL_FLOAT_SIZE = ctypes.sizeof(ctypes.c_float)
_GL_INT_SIZE = ctypes.sizeof(ctypes.c_int)

_FLOAT_SIZE = ctypes.sizeof(ctypes.c_float)
_INT_SIZE = ctypes.sizeof(ctypes.c_int)

_C_FLOAT_P = ctypes.POINTER(ctypes.c_float)
_C_INT_P = ctypes.POINTER(ctypes.c_int)

_NP_BYTE = np.int8
_NP_UBYTE = np.uint8
_NP_INT = np.int32
_NP_LONG = np.int64
_NP_FLOAT = np.float32
_NP_DOUBLE = np.float64
_NP_UINT = np.uint32

_GL_INDEX_TYPE_NUMPY_TYPE_MAP = {
	GL.GL_UNSIGNED_BYTE: np.uint8,
	GL.GL_UNSIGNED_SHORT: np.uint16,
	GL.GL_UNSIGNED_INT: np.uint32
}

_GL_TYPE_SIZE_MAP = {
	GL.GL_DOUBLE: 8,
	GL.GL_FIXED: 4,
	GL.GL_FLOAT: 4,
	GL.GL_UNSIGNED_INT: 4,
	GL.GL_INT: 4,
	GL.GL_UNSIGNED_SHORT: 2,
	GL.GL_SHORT: 2,
	GL.GL_HALF_FLOAT: 2,
	GL.GL_UNSIGNED_BYTE: 1,
	GL.GL_BYTE: 1
}

_IMAGE_FORMAT_MAP = {
	"JPEG": GL.GL_RGB,
	"JPG": GL.GL_RGB,
	"PNG": GL.GL_RGBA,
	"RGB": GL.GL_RGB,
	"RGBA": GL.GL_RGBA
}

_GL_ERROR_CODE_NAMES_MAP = {
	GL.GL_INVALID_ENUM: "INVALID_ENUM",
	GL.GL_INVALID_VALUE: "INVALID_VALUE",
	GL.GL_INVALID_OPERATION: "INVALID_OPERATION",
	GL.GL_STACK_OVERFLOW: "STACK_OVERFLOW",
	GL.GL_STACK_UNDERFLOW: "STACK_UNDERFLOW",
	GL.GL_OUT_OF_MEMORY: "OUT_OF_MEMORY",
	GL.GL_INVALID_FRAMEBUFFER_OPERATION: "INVALID_FRAMEBUFFER_OPERATION",
	GL.GL_CONTEXT_LOST: "CONTEXT_LOST"}

_GL_FB_ERROR_CODE_NAMES_MAP = {
	GL.GL_FRAMEBUFFER_UNDEFINED: "FRAMEBUFFER_UNDEFINED",
	GL.GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: "INCOMPLETE_ATTACHMENT",
	GL.GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: "INCOMPLETE_MISSING_ATTACHMENT",
	GL.GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: "FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER",
	GL.GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: "FRAMEBUFFER_INCOMPLETE_READ_BUFFER",
	GL.GL_FRAMEBUFFER_UNSUPPORTED: "GL_FRAMEBUFFER_UNSUPPORTED",
	GL.GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",
	GL.GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS : "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS"
}